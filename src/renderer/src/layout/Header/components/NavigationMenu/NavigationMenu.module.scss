.root {
    position: relative;
    display: flex;
    justify-content: center;
    height: 100%;
    z-index: 1;
}

.menu {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    margin: 0;

    li {
        height: 100%;
        display: flex;
        align-items: center;
    }
}

.trigger,
.link {
    display: flex;
    align-items: center;
    padding-inline: 1rem;
    height: 100%;
    user-select: none;
    font-weight: 500;
    transition:
        background-color 250ms ease,
        color 250ms ease;
}

.trigger:hover,
.link:hover {
    @include background-color('primary');
}

.trigger {
    justify-content: space-between;
    color: inherit;
    gap: 2px;
}

.content {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    animation-duration: 250ms;
    animation-timing-function: ease;
}
.content[data-motion='from-start'] {
    animation-name: enterFromLeft;
}
.content[data-motion='from-end'] {
    animation-name: enterFromRight;
}
.content[data-motion='to-start'] {
    animation-name: exitToLeft;
}
.content[data-motion='to-end'] {
    animation-name: exitToRight;
}

.indicator {
    display: flex;
    align-items: flex-end;
    justify-content: center;
    height: 10px;
    top: 100%;
    overflow: hidden;
    z-index: 1;
    transition:
        width,
        transform 250ms ease;
}
.indicator[data-state='visible'] {
    animation: fadeIn 200ms ease;
}
.indicator[data-state='hidden'] {
    animation: fadeOut 200ms ease;
}

.viewport {
    position: relative;
    transform-origin: top center;
    margin-top: 10px;
    width: 100%;
    @include background-color('base-300');
    border-radius: 6px;
    overflow: hidden;
    box-shadow:
        hsl(206 22% 7% / 35%) 0px 10px 38px -10px,
        hsl(206 22% 7% / 20%) 0px 10px 20px -15px;
    height: var(--radix-navigation-menu-viewport-height);
    transition:
        width,
        height,
        300ms ease;
}
.viewport[data-state='open'] {
    animation: scaleIn 200ms ease;
}
.viewport[data-state='closed'] {
    animation: scaleOut 200ms ease;
}

.list {
    display: grid;
    padding: 22px;
    margin: 0;
    column-gap: 10px;
    list-style: none;
}

.viewport-container {
    position: absolute;
    display: flex;
    justify-content: center;
    width: 100%;
    top: 100%;
    left: 0;
    perspective: 2000px;
}

.chevron {
    position: relative;
    color: var(--violet-10);
    top: 1px;
    transition: transform 250ms ease;
}
[data-state='open'] > .chevron {
    transform: rotate(-180deg);
}

@media only screen and (min-width: 600px) {
    .content {
        width: auto;
    }
    .viewport {
        width: var(--radix-navigation-menu-viewport-width);
    }
}

@keyframes enterFromRight {
    from {
        opacity: 0;
        transform: translateX(200px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes enterFromLeft {
    from {
        opacity: 0;
        transform: translateX(-200px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes exitToRight {
    from {
        opacity: 1;
        transform: translateX(0);
    }
    to {
        opacity: 0;
        transform: translateX(200px);
    }
}

@keyframes exitToLeft {
    from {
        opacity: 1;
        transform: translateX(0);
    }
    to {
        opacity: 0;
        transform: translateX(-200px);
    }
}

@keyframes scaleIn {
    from {
        opacity: 0;
        transform: rotateX(-30deg) scale(0.9);
    }
    to {
        opacity: 1;
        transform: rotateX(0deg) scale(1);
    }
}

@keyframes scaleOut {
    from {
        opacity: 1;
        transform: rotateX(0deg) scale(1);
    }
    to {
        opacity: 0;
        transform: rotateX(-10deg) scale(0.95);
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes fadeOut {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}
